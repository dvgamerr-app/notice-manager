apiVersion: v1
kind: ConfigMap
metadata:
  name: notice-app
  namespace: ris-utility
data:
  TZ: Asia/Bangkok
  NODE_ENV: production
  HOST_API: https://sandbox.notice.touno.io/
  PROXY_API: https://sandbox.notice.touno.io/
  AXIOS_BASE_URL: https://sandbox.notice.touno.io/
  MONGODB_URI: mongodb://notice-db:27017/
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    touno-io: notice-app
  name: notice-app
  namespace: ris-utility
spec:
  replicas: 3
  selector:
    matchLabels:
      touno-io: notice-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  progressDeadlineSeconds: 12
  template:
    metadata:
      labels:
        touno-io: notice-app
    spec:
      containers:
      - image: dvgamerr/line-notice:latest
        name: notice-app
        ports:
        - name: liveness
          containerPort: 4000
        livenessProbe:
          httpGet:
            path: /health
            port: liveness
          failureThreshold: 10
          periodSeconds: 3
        resources:
          requests:
            memory: "50M"
            cpu: "10m"
          limits:
            memory: "300M"
            cpu: "500m"
        envFrom:
        - configMapRef:
            name: notice-app
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
    touno-io: notice-app
  name: notice-app
  namespace: ris-utility
spec:
  selector:
    touno-io: notice-app
  ports:
  - name: "notice"
    port: 80
    targetPort: 4000
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: notice-app
  namespace: ris-utility
  annotations:
    kubernetes.io/ingress.class: "dashboard"
    cert-manager.io/cluster-issuer: "letsencrypt"
spec:
  tls:
  - hosts:
    - sandbox.notice.touno.io
    secretName: sandbox.notice
  rules:
  - host: sandbox.notice.touno.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          serviceName: notice-app
          servicePort: 80