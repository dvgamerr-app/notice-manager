name: Docker

on:
  push:
    branches: 
      - main
    tags:
      - v*

env:
  UI_NAME: notice-ui
  API_NAME: notice-api

jobs:
  notice-ui:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2.1.0
      - name: Build image notice-ui
        run: docker build . -f notice-ui.Dockerfile -t $UI_NAME --build-arg ARCH=arm32v7

      - name: Log into docker.io
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u ${{ github.actor }} --password-stdin

      - name: Push image to docker.io
        run: |
          IMAGE_ID=${{ github.actor }}/$UI_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $UI_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

          
  notice-api:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2.1.0
      - name: Build image notice-api
        run: docker build . -f notice-api.Dockerfile -t $API_NAME --build-arg ARCH=arm32v7

      - name: Log into docker.io
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u ${{ github.actor }} --password-stdin

      - name: Push image to docker.io
        run: |
          IMAGE_ID=${{ github.actor }}/$API_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $API_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
